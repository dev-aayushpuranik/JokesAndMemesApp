package com.aayushpuranik.jokesandmemesapp.views.viewModelsimport androidx.lifecycle.ViewModelimport com.aayushpuranik.jokesandmemesapp.Repository.JokesRepositoryimport com.aayushpuranik.jokesandmemesapp.views.NetworkStateimport com.aayushpuranik.jokesandmemesapp.views.UIStateimport dagger.hilt.android.lifecycle.HiltViewModelimport kotlinx.coroutines.CoroutineScopeimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.flow.MutableStateFlowimport kotlinx.coroutines.launchimport javax.inject.Inject@HiltViewModelclass JokesViewModel @Inject constructor(    private val jokesRepository: JokesRepository): ViewModel() {    val uiStateFlow = MutableStateFlow<UIState<List<String>?>>(UIState.LOADING)    fun fetchAllCategories() {        CoroutineScope(Dispatchers.IO).launch {            val response = jokesRepository.getCategories()            when(response) {                is NetworkState.Error -> {                    uiStateFlow.value = UIState.ERROR(response.error)                }                is NetworkState.Success<List<String>?> -> {                    uiStateFlow.value = UIState.SUCCESS(response.data)                }            }        }    }}